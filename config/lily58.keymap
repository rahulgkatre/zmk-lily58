/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3     &kp N4    &kp N5                          &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB       &kp Q   &kp W   &kp E      &kp R     &kp T                           &kp Y   &kp U     &kp I      &kp O    &kp P     &kp ENTER
&kp CAPSLOCK  &kp A   &kp S   &kp D      &kp F     &kp G                           &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z   &kp X   &kp C      &kp V     &kp B   &kp LGUI     &kp RGUI   &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                              &kp LCTRL  &kp LALT  &mo 1   &kp SPACE    &kp SPACE  &mo 2   &kp LBKT  &kp RBKT
            >;
        };

        fn_layer {
            bindings = <
&kp ESC  &kp F1    &kp F2    &kp F3     &kp F4  &kp F5                  &kp F6         &kp F7  &kp F8    &kp F9          &kp F10          &none
&none    &none     &kp UP    &none      &none   &none                   &kp PAGE_UP    &none   &none     &kp UP_ARROW    &kp F11          &kp F12
&none    &kp LEFT  &kp DOWN  &kp RIGHT  &none   &none                   &kp PAGE_DOWN  &none   &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&none    &none     &none     &none      &none   &none   &none    &none  &none          &none   &none     &none           &none            &none
                             &none      &none   &none   &none    &none  &none          &none   &none
            >;
        };

        symbol_layer {
            bindings = <
&kp GRAVE  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &kp MINUS  &kp PLUS  &trans
&trans     &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &kp LBKT   &kp RBKT  &kp BSLH
&trans     &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &kp SEMI   &kp SQT   &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp COMMA  &kp DOT    &kp FSLH  &trans
                           &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &trans      &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP
&trans      &trans        &trans        &trans        &trans        &trans                          &trans         &trans                &trans      &trans      &trans        &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans         &trans                &trans      &trans      &trans        &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans         &trans                &bt BT_PRV  &bt BT_NXT  &trans        &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans         &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bt_layer_condition {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
